"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["5645"],{482:function(n,e,t){t.r(e),t.d(e,{metadata:()=>o,contentTitle:()=>s,default:()=>u,assets:()=>p,toc:()=>a,frontMatter:()=>i});var o=JSON.parse('{"id":"example-vector-layers","title":"Vector layers","description":"","source":"@site/versioned_docs/version-3.x/example-vector-layers.md","sourceDirName":".","slug":"/example-vector-layers","permalink":"/docs/v3/example-vector-layers","draft":false,"unlisted":false,"tags":[],"version":"3.x","frontMatter":{"title":"Vector layers"},"sidebar":"docs","previous":{"title":"Events","permalink":"/docs/v3/example-events"},"next":{"title":"SVG Overlay","permalink":"/docs/v3/example-svg-overlay"}}'),r=t("1549"),l=t("2376");let i={title:"Vector layers"},s=void 0,p={},a=[];function c(n){let e={code:"code",pre:"pre",...(0,l.a)(),...n.components};return(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-tsx",children:"import {\n  Circle,\n  CircleMarker,\n  MapContainer,\n  Polyline,\n  Polygon,\n  Popup,\n  Rectangle,\n  TileLayer,\n} from 'react-leaflet'\n\nconst center = [51.505, -0.09]\n\nconst polyline = [\n  [51.505, -0.09],\n  [51.51, -0.1],\n  [51.51, -0.12],\n]\n\nconst multiPolyline = [\n  [\n    [51.5, -0.1],\n    [51.5, -0.12],\n    [51.52, -0.12],\n  ],\n  [\n    [51.5, -0.05],\n    [51.5, -0.06],\n    [51.52, -0.06],\n  ],\n]\n\nconst polygon = [\n  [51.515, -0.09],\n  [51.52, -0.1],\n  [51.52, -0.12],\n]\n\nconst multiPolygon = [\n  [\n    [51.51, -0.12],\n    [51.51, -0.13],\n    [51.53, -0.13],\n  ],\n  [\n    [51.51, -0.05],\n    [51.51, -0.07],\n    [51.53, -0.07],\n  ],\n]\n\nconst rectangle = [\n  [51.49, -0.08],\n  [51.5, -0.06],\n]\n\nconst fillBlueOptions = { fillColor: 'blue' }\nconst blackOptions = { color: 'black' }\nconst limeOptions = { color: 'lime' }\nconst purpleOptions = { color: 'purple' }\nconst redOptions = { color: 'red' }\n\nfunction VectorLayersExample() {\n  return (\n    <MapContainer center={center} zoom={13}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Circle center={center} pathOptions={fillBlueOptions} radius={200} />\n      <CircleMarker\n        center={[51.51, -0.12]}\n        pathOptions={redOptions}\n        radius={20}>\n        <Popup>Popup in CircleMarker</Popup>\n      </CircleMarker>\n      <Polyline pathOptions={limeOptions} positions={polyline} />\n      <Polyline pathOptions={limeOptions} positions={multiPolyline} />\n      <Polygon pathOptions={purpleOptions} positions={polygon} />\n      <Polygon pathOptions={purpleOptions} positions={multiPolygon} />\n      <Rectangle bounds={rectangle} pathOptions={blackOptions} />\n    </MapContainer>\n  )\n}\n"})})}function u(n={}){let{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(c,{...n})}):c(n)}},2376:function(n,e,t){t.d(e,{Z:function(){return s},a:function(){return i}});var o=t(4194);let r={},l=o.createContext(r);function i(n){let e=o.useContext(l);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),o.createElement(l.Provider,{value:e},n.children)}}}]);