"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["9753"],{1094:function(e,t,n){n.r(t),n.d(t,{metadata:()=>o,contentTitle:()=>c,default:()=>u,assets:()=>l,toc:()=>s,frontMatter:()=>a});var o=JSON.parse('{"id":"core-introduction","title":"React Leaflet Core","description":"Introduction","source":"@site/versioned_docs/version-3.x/core-introduction.md","sourceDirName":".","slug":"/core-introduction","permalink":"/docs/v3/core-introduction","draft":false,"unlisted":false,"tags":[],"version":"3.x","frontMatter":{"title":"React Leaflet Core"},"sidebar":"docs","previous":{"title":"Child components","permalink":"/docs/v3/api-components"},"next":{"title":"Core architecture","permalink":"/docs/v3/core-architecture"}}'),i=n("1549"),r=n("2376");let a={title:"React Leaflet Core"},c=void 0,l={},s=[{value:"Introduction",id:"introduction",level:2},{value:"Audience",id:"audience",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}];function d(e){let t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(t.p,{children:["React Leaflet's core APIs are implemented in the ",(0,i.jsx)(t.code,{children:"@react-leaflet/core"})," package to provide a separation from the public APIs.\nThe goal of this package is to make most of React Leaflet's internal logic available to developers to easily implement custom behaviors, such as third-party Leaflet plugins."]}),"\n",(0,i.jsx)(t.h2,{id:"audience",children:"Audience"}),"\n",(0,i.jsx)(t.p,{children:"You might want to learn about the core APIs if you want to:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Customize how public components work, by creating an alternative implementation matching your needs"}),"\n",(0,i.jsx)(t.li,{children:"Implement new components not provided by React Leaflet"}),"\n",(0,i.jsx)(t.li,{children:"Simply learn more about how React Leaflet works"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["If you're only interested in using the public APIs of React Leaflet, their usage is covered in the previous sections of this documentation, notably the ",(0,i.jsx)(t.a,{href:"/docs/v3/start-introduction",children:"getting started"})," and ",(0,i.jsx)(t.a,{href:"/docs/v3/api-map",children:"public API"})," pages."]}),"\n",(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"@react-leaflet/core"})," package is a dependency of the ",(0,i.jsx)(t.code,{children:"react-leaflet"})," one. The main ",(0,i.jsx)(t.a,{href:"/docs/v3/start-installation",children:"installation steps"})," from the getting started documentation should be followed to use the core APIs."]}),"\n",(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(t.p,{children:["All the ",(0,i.jsx)(t.a,{href:"/docs/v3/core-api",children:"core APIs"})," can be imported from the ",(0,i.jsx)(t.code,{children:"@react-leaflet/core"})," package, such as"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"import { createControlComponent } from '@react-leaflet/core'\nimport { Control } from 'leaflet'\n\nexport const ZoomControl = createControlComponent(\n  (props) => new Control.Zoom(props),\n)\n"})}),"\n",(0,i.jsx)(t.p,{children:"The following page presents the architecture and usage in more details."})]})}function u(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},2376:function(e,t,n){n.d(t,{Z:function(){return c},a:function(){return a}});var o=n(4194);let i={},r=o.createContext(i);function a(e){let t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);