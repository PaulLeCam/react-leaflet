"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["2203"],{2252:function(n,e,t){t.r(e),t.d(e,{metadata:()=>o,contentTitle:()=>u,default:()=>c,assets:()=>i,toc:()=>d,frontMatter:()=>a});var o=JSON.parse('{"id":"example-view-bounds","title":"View bounds","description":"","source":"@site/versioned_docs/version-3.x/example-view-bounds.md","sourceDirName":".","slug":"/example-view-bounds","permalink":"/docs/v3/example-view-bounds","draft":false,"unlisted":false,"tags":[],"version":"3.x","frontMatter":{"title":"View bounds"},"sidebar":"docs","previous":{"title":"Draggable Marker","permalink":"/docs/v3/example-draggable-marker"},"next":{"title":"Animated panning","permalink":"/docs/v3/example-animated-panning"}}'),r=t("1549"),s=t("2376");let a={title:"View bounds"},u=void 0,i={},d=[];function l(n){let e={code:"code",pre:"pre",...(0,s.a)(),...n.components};return(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-tsx",children:"import { useMemo, useState } from 'react'\nimport { MapContainer, Reactangle, TileLayer, useMap } from 'react-leaflet'\n\nconst innerBounds = [\n  [49.505, -2.09],\n  [53.505, 2.09],\n]\nconst outerBounds = [\n  [50.505, -29.09],\n  [52.505, 29.09],\n]\n\nconst redColor = { color: 'red' }\nconst whiteColor = { color: 'white' }\n\nfunction SetBoundsRectangles() {\n  const [bounds, setBounds] = useState(outerBounds)\n  const map = useMap()\n\n  const innerHandlers = useMemo(\n    () => ({\n      click() {\n        setBounds(innerBounds)\n        map.fitBounds(innerBounds)\n      },\n    }),\n    [map],\n  )\n  const outerHandlers = useMemo(\n    () => ({\n      click() {\n        setBounds(outerBounds)\n        map.fitBounds(outerBounds)\n      },\n    }),\n    [map],\n  )\n\n  return (\n    <>\n      <Rectangle\n        bounds={outerBounds}\n        eventHandlers={outerHandlers}\n        pathOptions={bounds === outerBounds ? redColor : whiteColor}\n      />\n      <Rectangle\n        bounds={innerBounds}\n        eventHandlers={innerHandlers}\n        pathOptions={bounds === innerBounds ? redColor : whiteColor}\n      />\n    </>\n  )\n}\n\nfunction BoundsExample() {\n  return (\n    <MapContainer bounds={outerBounds}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <SetBoundsRectangles />\n    </MapContainer>\n  )\n}\n"})})}function c(n={}){let{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}},2376:function(n,e,t){t.d(e,{Z:function(){return u},a:function(){return a}});var o=t(4194);let r={},s=o.createContext(r);function a(n){let e=o.useContext(s);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function u(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);